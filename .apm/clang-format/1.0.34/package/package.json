{"name":"clang-format","version":"1.0.34","description":"node wrapper around clang-format","repository":{"type":"git","url":"git+ssh://git@github.com/angular/clang-format.git"},"main":"index.js","bin":{"clang-format":"index.js","git-clang-format":"bin/git-clang-format"},"scripts":{"test":"./test.sh"},"contributors":[{"name":"Alex Eagle","email":"alexeagle@google.com"},{"name":"Martin Probst","email":"martinprobst@google.com"}],"license":"Apache-2.0","dependencies":{"resolve":"^1.1.6"},"gitHead":"20a9f6a9abd23ec43adcb48334b3beb974a82b07","readme":"# clang-format\nnode.js module which wraps the native clang-format executable.\n\n## From the command-line:\n\n    $ npm install -g clang-format\n    $ clang-format -help\n\nIf your platform isn't yet supported, you can create the native binary from\nthe latest upstream clang sources, make sure it is stripped and optimized\n(should be about 1.4MB as of mid-2015) and send a pull request to add it.\n\n## Compiling clang-format\n\nFor Linux, compile a statically linked MinSizeRel build:\n\n    cmake -G Ninja -DCMAKE_BUILD_TYPE=MinSizeRel -DLLVM_BUILD_STATIC=true ..\n    ninja clang-format\n\nFor Mac OS X, static linking is not required.\n\n## Windows\n\nWindows snapshot builds to include in the release can be found at the\n[LLVM website](http://llvm.org/builds/).\n\nConfigure with:\n\n    cmake -G \"Visual Studio 12\" -DCMAKE_BUILD_TYPE=MinSizeRel ..\n\nIn the generated Visual Studio project, search for the `clang-format` binary in\nthe Solution Explorer window, right click and choose Build.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/angular/clang-format/issues"},"homepage":"https://github.com/angular/clang-format#readme","_id":"clang-format@1.0.34","_shasum":"8f9688455884cce958153bf6edcbd6826e37e05e","_from":"angular/clang-format","_resolved":"git://github.com/angular/clang-format.git#20a9f6a9abd23ec43adcb48334b3beb974a82b07"}